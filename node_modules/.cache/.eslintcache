[{"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\index.js":"1","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\pages\\Main\\index.js":"2","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\routes.js":"3","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\pages\\SignIn\\index.js":"4","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\pages\\SignUp\\index.js":"5","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\AllRightReserved\\index.js":"6","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\InputPassword\\index.js":"7","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\services\\viaCEP.js":"8","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\ProfileBar\\index.js":"9","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\pages\\Profile\\index.js":"10","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\JobOpportunity\\index.js":"11","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\ActionButtons\\index.js":"12","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\Skills\\index.js":"13","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\ModalMatch\\index.js":"14"},{"size":355,"mtime":1626140564130,"results":"15","hashOfConfig":"16"},{"size":1933,"mtime":1626463250642,"results":"17","hashOfConfig":"16"},{"size":650,"mtime":1626224327993,"results":"18","hashOfConfig":"16"},{"size":1529,"mtime":1626222407781,"results":"19","hashOfConfig":"16"},{"size":3460,"mtime":1626222456813,"results":"20","hashOfConfig":"16"},{"size":207,"mtime":1626135696131,"results":"21","hashOfConfig":"16"},{"size":1020,"mtime":1626138074971,"results":"22","hashOfConfig":"16"},{"size":412,"mtime":1626139507691,"results":"23","hashOfConfig":"16"},{"size":909,"mtime":1626224537720,"results":"24","hashOfConfig":"16"},{"size":2356,"mtime":1626459664043,"results":"25","hashOfConfig":"16"},{"size":1188,"mtime":1626459530852,"results":"26","hashOfConfig":"16"},{"size":782,"mtime":1626463631843,"results":"27","hashOfConfig":"16"},{"size":514,"mtime":1626460326788,"results":"28","hashOfConfig":"16"},{"size":1009,"mtime":1626463037785,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"169qahc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\index.js",[],["61","62"],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\pages\\Main\\index.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\routes.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\pages\\SignIn\\index.js",["63"],"import { useState, useEffect } from 'react';\r\nimport './style.css';\r\nimport '../../styles/form.css';\r\nimport { Link } from 'react-router-dom';\r\nimport AllRightReserved from '../../components/AllRightReserved';\r\nimport InputPassword from '../../components/InputPassword';\r\n\r\nfunction SignIn() {\r\n  const [password, setPassword] = useState('');\r\n  \r\n    return (\r\n      <div className=\"background-dark-form container-form\">\r\n        <form className=\"form form-sign-in\">\r\n          <div className=\"text-center mb-lg\">\r\n            <h1>Entrar</h1>\r\n            <Link to=\"/sign-up\">Cadastre-se</Link>\r\n          </div>\r\n          <div>\r\n            <div className=\"flex-column\">\r\n              <label htmlFor=\"email\">E-mail</label>\r\n              <input \r\n                id=\"email\" \r\n                type=\"text\" \r\n                placeholder=\"Digite seu e-mail\" \r\n              />\r\n            </div>\r\n            <InputPassword \r\n              label=\"Senha\" \r\n              placeholder=\"Digite sua senha\"\r\n              value={password}\r\n              setValue={setPassword}\r\n            />\r\n            <button className=\"btn-dark-blue\">Entrar</button>\r\n            <div>\r\n              <input type=\"checkbox\" value=\"Lembrar-me\" name=\"remember\" />\r\n              <span htmlFor=\"remember\">Lembrar-me</span>\r\n            </div>\r\n          </div>\r\n          <Link to=\"/recovery-password\" className=\"my-lg\">Esqueci minha senha</Link>\r\n          <AllRightReserved />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  export default SignIn;","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\pages\\SignUp\\index.js",["64"],"import { useState, useEffect } from 'react';\r\nimport './style.css';\r\nimport '../../styles/form.css';\r\nimport { Link } from 'react-router-dom';\r\nimport AllRightReserved from '../../components/AllRightReserved';\r\nimport InputPassword from '../../components/InputPassword';\r\nimport { getCityByCEP } from '../../services/viaCEP';\r\nimport { toast } from 'react-toastify'; \r\n\r\nfunction SignUp() {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [cep, setCep] = useState('');\r\n  const [city, setCity] = useState('');\r\n\r\n  async function loadCityByCEP(myCep) {\r\n    const cityByCEP = await getCityByCEP(myCep);\r\n\r\n    if (!cityByCEP) {\r\n      toast.error(\"Falha ao encontrar cidade!\")\r\n      return;\r\n    }\r\n\r\n    setCity(cityByCEP);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if(cep.length < 9 && city.length > 0) {\r\n      setCity(\"\");\r\n    }\r\n\r\n    if (cep.indexOf('-') !== -1) {\r\n      if (cep.length === 9) {\r\n        loadCityByCEP(cep);\r\n      }\r\n      return\r\n    }\r\n\r\n    if (cep.length === 8) {\r\n      loadCityByCEP(cep);\r\n    }\r\n\r\n  }, [cep]);\r\n\r\n    return (\r\n      <div className=\"background-dark-form  container-form\">\r\n        <form className=\"form form-sign-up\">\r\n          <div className=\"text-center mb-lg\">\r\n            <h1>Cadastre-se</h1>\r\n            <Link to=\"/sign-in\">Entrar</Link>\r\n          </div>\r\n          <div className=\"body-sign-up\">\r\n            <div>\r\n              <div className=\"flex-column\">\r\n                <label htmlFor=\"name\">Nome</label>\r\n                <input \r\n                  id=\"name\" \r\n                  type=\"text\" \r\n                  placeholder=\"Digite seu nome\" \r\n                />\r\n              </div>\r\n              <div className=\"flex-column\">\r\n                <label htmlFor=\"password\">CEP</label>\r\n                <input \r\n                  id=\"cep\" \r\n                  type=\"text\" \r\n                  placeholder=\"Digite seu CEP\"\r\n                  value={cep}\r\n                  maxLength={9}\r\n                  onChange={(e) => setCep(e.target.value)} \r\n                />\r\n              </div>\r\n              <InputPassword \r\n                label=\"Senha\" \r\n                placeholder=\"Digite sua senha\"\r\n                value={password}\r\n                setValue={setPassword}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"flex-column\">\r\n                <label htmlFor=\"email\">E-mail</label>\r\n                <input \r\n                  id=\"email\" \r\n                  type=\"text\" \r\n                  placeholder=\"Digite seu e-mail\" \r\n                />\r\n              </div>\r\n              <div className=\"flex-column\">\r\n                <label htmlFor=\"city\">Cidade</label>\r\n                <input \r\n                  id=\"city\" \r\n                  type=\"text\" \r\n                  placeholder=\"Digite sua cidade\" \r\n                  value={city}\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                />\r\n              </div>\r\n              <InputPassword \r\n                label=\"Confirme sua senha\" \r\n                placeholder=\"Digite sua senha novamente\"\r\n                value={confirmPassword}\r\n                setValue={setConfirmPassword}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className=\"btn-dark-blue\">Cadastre-se</button>\r\n          <AllRightReserved />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  export default SignUp;","C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\AllRightReserved\\index.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\InputPassword\\index.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\services\\viaCEP.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\ProfileBar\\index.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\pages\\Profile\\index.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\JobOpportunity\\index.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\ActionButtons\\index.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\Skills\\index.js",[],"C:\\Clarice\\Cubos Academy\\frontend\\Front_Modulo_04\\matchCubos\\cubosmatch\\src\\components\\ModalMatch\\index.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":20,"nodeType":"71","messageId":"72","endLine":1,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":44,"column":6,"nodeType":"75","endLine":44,"endColumn":11,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'city.length'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [cep, city.length]",{"range":"82","text":"83"},[1102,1107],"[cep, city.length]"]